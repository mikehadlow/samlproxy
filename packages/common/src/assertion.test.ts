import { expect, test, describe } from "bun:test"
import * as assertion from "./assertion"

const exampleAssertion = `PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIElEPSJfOGU4ZGM1ZjY5YTk4Y2M0YzFmZjM0MjdlNWNlMzQ2MDZmZDY3MmY5MWU2IiBWZXJzaW9uPSIyLjAiIElzc3VlSW5zdGFudD0iMjAyNS0wNS0yMVQwOTozNzo1OC40MjRaIiBEZXN0aW5hdGlvbj0iIiBJblJlc3BvbnNlVG89Il80NjA2Y2MxZjQyN2ZhOTgxZTZmZmQ2NTNlZThkNjk3MmZjNWNlMzk4YzQiPgoJPHNhbWw6SXNzdWVyPnRoZS1pZHAtZW50aXR5LWlkPC9zYW1sOklzc3Vlcj48ZHM6U2lnbmF0dXJlIHhtbG5zOmRzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48ZHM6U2lnbmVkSW5mbz48ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPjxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+PGRzOlJlZmVyZW5jZSBVUkk9IiNfOGU4ZGM1ZjY5YTk4Y2M0YzFmZjM0MjdlNWNlMzQ2MDZmZDY3MmY5MWU2Ij48ZHM6VHJhbnNmb3Jtcz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9kczpUcmFuc2Zvcm1zPjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiLz48ZHM6RGlnZXN0VmFsdWU+T1lLNFpUQWlsRWtLL2wzYXdDMm1FcVVndnpkUHYrWElwc3dKcjdUWnZPUT08L2RzOkRpZ2VzdFZhbHVlPjwvZHM6UmVmZXJlbmNlPjwvZHM6U2lnbmVkSW5mbz48ZHM6U2lnbmF0dXJlVmFsdWU+WmIwZC9DVXNsVVE2aWlRTzROaklrWHpqNnd6aHd2U3NpYmZ1ZmlweEJnMzVzUDRyUlNOVjRHdzNoTS83T1IwVTNoeXdKMGVraUlWeG45cmp5MlpxcjFjdGhLblhvQTh6K2dyTFNMaFBsQmI5bmJiRm5vUERQS2wxeXNNMUp6UzE4NUd2WFdUMDJrVDFIOFpQN2pjeExyL1pOZXpFa2FRWXFDamhabXpXSnRZWVRodFF2WVBxN0pJaU1zbzB6KzNiWDRNRGc2NktZR0V5NmNXM2hHUUFuMGVvZU9odUI2TnNzUlkyVW95aU5mTzlYa3M0MmIxMDlpckM4UFk4NHJ5dm5XQ2h3QmxRMXBlT05Na2lqUlYrUG8xRmRyVEIyVDVVR2lqbkxzU0UwR05VdVQySmlzclJNUzA0YUc0OGdBU3RrMkEzK21vZXE4UmRIV2xVRk5hR25UWENKNUltY2NkeVhBck1KRVBiNkJsNDY2MlAzNmdiMnl3bFN5Y0VPckY2S2dPZW5TdXFhc3pwRGtrbXJ4bFh4QklQMm95MGhTU2xGcTBpVDNpbkwycWNaeklUSTlJTFhjU3MyL1RDQVhvbDVmRGU3V1hoVzJVQlcyanZBdGFhK1ZFamorcVdRZXl1Tk9zZnA3eHZPbmxuT3FYbjM2SkNwS0U5TjAzWGZtS2RielpsNnZyYkJXV2lOSlVkNDFSUlE2WERwcXJPUmJwRjF4UlhGT3hHOWxpdjhKZTYxNUxQenNySERQZ3AvVmJ3djhRWS83YjU3SFVmMmtxUjRtVGdsYWpEb2JaTkZqREIzaTZTOWY0QjFrTjhmVmN3ckRHN1NySUs3MS8wdFhwVFY5NDFQQ3hkZnZGRWc2a0ZXQXdzRitKNVhRYzhwaHZHVTRyVTB0dWtCRzA9PC9kczpTaWduYXR1cmVWYWx1ZT48ZHM6S2V5SW5mbz48ZHM6WDUwOURhdGE+PGRzOlg1MDlDZXJ0aWZpY2F0ZT5NSUlGYXpDQ0ExT2dBd0lCQWdJVWVCM2o5UlNqdWJHdStYWnVsTVVVdjlrYUZhb3dEUVlKS29aSWh2Y05BUUVMQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTUdFbHVkR1Z5Ym1WMElGZHBaR2RwZEhNZ1VIUjVJRXgwWkRBZUZ3MHlOVEExTVRreE1EVTNOVEphRncwek5UQTFNVGN4TURVM05USmFNRVV4Q3pBSkJnTlZCQVlUQWtGVk1STXdFUVlEVlFRSURBcFRiMjFsTFZOMFlYUmxNU0V3SHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDaE85UTlQLy8vY2tnRjNlVGQ0OEtXL01uVFRGTENTK0NRRk5lYndyVjFBVFhvQVZUR1pVWnFmcklYc0JCNmMya1ZBbHlyb3hGckk5c0ZRcW9mV0p3djMxVms3K0hXbm9QSkVNZDRSYVRFZ09QVXVrZEozUHp5aWdxUWR1cEFBeFJZc1kxQnBnUUp5WGhYRmxQcTNLSlJDZFlzMTc1QlFxZlBuSVEzMllKVEMvZmRsZjdaOExVeDIvTnoyc2UrZFplR3lRVTJPYUt2d2VYbTB4cHRHZmp6ZC95UXNTeTNYeG90RDBvcjlkS1ZCSmhQdnJ0VzRtSy9rUHFJYmJCR0p0SHhFQUp0WEp4ZjZmSVJqdWtIYThzWEJWZFFRSyt0N1k3YmVOenNsZUNnU2UyWjNBTEN6NWE0eDFOYXgrQ3BTOUt2OEdlWm5QS3VxWWU4Q3R4OE5lbmhMSWw5UnFDZUp4VGNjc1VyelkzZmQrakNIZTVpUFFUUlFlTUsvUUJSeTZ0MkdWaGJGd0F6eURDcXoxNWxQNk1UeEVFSGNoWEpIL2ZlU3pPc3ZSOXoyalhnY3liYVgzM2txOEQwWER6RnhSTVl4Wnk1SjJrVncwQ3lUNkt2Y2dxWXJFbCtHazFHRkxPc3YxOElQS0pVTzdMdHloNEplRTAwK0w3SHFla0tNVlZBeXdjbHJ5clJaOVB3V2dyNG9ZZUhMOHc5VzYxWTlNcmRyZmhMRE9LTmgyd2krMzlDNlJubFcybkRCYm43NkFTb0p5Z0NQQ2FzRXJzNTFPcCtyZ1ZiSHovUTVWeDVHMVRUamwvRDlXS3RCRVJWVXJEN29ZUVJaRGJJUnh5VitVZVgrWVVTeHNxTXJHUmdQNzFxQnV1Z2FsNUE1Z1FkR2FXNUNoSGdqNTRHUndJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVU0vdG1ya09ISC9nQzJDTU14SjB3bVRROXNyOHdId1lEVlIwakJCZ3dGb0FVTS90bXJrT0hIL2dDMkNNTXhKMHdtVFE5c3I4d0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQWZHNmtVTmtZeTMrRGJ5WXlIVFZtU0tNY2RGWERqTGpMRDJkQ2E3VWlBYytZaVNKYUY1SmxDWkNadUJ2cUZBZnlnU0VFdEFuSmpuSXc3MlVqaXljaFRtanZJTDVsTENkbllGNkVzR3ZtQWtmbzdtdWRvNmNQVEdOeU5acURWVnR4Ym10Ump0dXAvQkhYUitVVjBRbDAwK0xhSmg0RXdGa05CcTRoamdPVHAzNlVMSGpweWM5V2M3TEh3YWhOZGpjWTFET0ZYb2V6V05zUkZ1WUtoMkwwTjVBdC9FT1Q0b1pWTlBQNFU3djNoc2NPc2lJYXJ1L3k1T1IzOFlsN3lNRXQzMEgycjdRZDJGby94WlZXTzJJdUFMcjY0cllWNjZPNTZFWGs4N0t1d1JHWE5oRTh6RFJEZkN6VjJMbmRmNnpSUmpBbU5Ma1BseExGWk5VbnNNek90c1FxZS92a3g0dmRFUWpsamNxNXJZT0FOVi95Vm81ejZLREJpZXhMbkc1ck01OXRmVTI3UmdGZlZOZWVFZjdaa0xkbmRLQlh3bTRNK01vNW03ekIwZG0yTmkzSkpkN2oyTWN5cllPOUUva3dNaW1wUmQvb0N2ekNwYTd3Q3p3SGtoVWRIbUlnR0F4L0hnaDZNQVR5bzBkN2hMaWNIdVhLaEdxUUlEL2dSYzBsWUpLMVBod2VlOEZiQ0xQMUg4MWRqcXJXYUpCSUhYQmpCTExUOTRWVmlyV04zNjVWbHd2WWE3c0JzUHZaMXNuOHIxVGcxU3pNSC82YStjaXRsQStNTlhTNVU0VXduLzFkRWpXc3JZWnl4Nlh4ZHc5ZUtxeEx0VnI1Rm5KQjM2SUN0U3ZSTnBXYTYraEUyakFHMTdtSm42OXZBWFFNSzJWR1hFcFVSUGpuSURFPTwvZHM6WDUwOUNlcnRpZmljYXRlPjwvZHM6WDUwOURhdGE+PC9kczpLZXlJbmZvPjwvZHM6U2lnbmF0dXJlPgoJPHNhbWxwOlN0YXR1cz4KCQk8c2FtbHA6U3RhdHVzQ29kZSBWYWx1ZT0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpTdWNjZXNzIi8+Cgk8L3NhbWxwOlN0YXR1cz4KCTxzYW1sOkFzc2VydGlvbiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iIElEPSJfNTYzN2UwMzMtMmU1ZS00NDYwLWJhYzItY2I5ZDQ1ZDA4ZjNjIiBWZXJzaW9uPSIyLjAiIElzc3VlSW5zdGFudD0iMjAyNS0wNS0yMVQwOTozNzo1OC40MjRaIj4KCQk8c2FtbDpJc3N1ZXI+dGhlLWlkcC1lbnRpdHktaWQ8L3NhbWw6SXNzdWVyPgoJCTxzYW1sOlN1YmplY3Q+CgkJCTxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMTpuYW1laWQtZm9ybWF0OmVtYWlsQWRkcmVzcyI+bGVvQGhhZGxvdy5jb208L3NhbWw6TmFtZUlEPgoJCQk8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlciI+CgkJCQk8c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uRGF0YSBOb3RPbk9yQWZ0ZXI9IjIwMjUtMDUtMjFUMDk6NDI6NTguNDI0WiIgUmVjaXBpZW50PSJ0aGUtc3AtZW50aXR5LWlkIiBJblJlc3BvbnNlVG89Il80NjA2Y2MxZjQyN2ZhOTgxZTZmZmQ2NTNlZThkNjk3MmZjNWNlMzk4YzQiLz4KCQkJPC9zYW1sOlN1YmplY3RDb25maXJtYXRpb24+CgkJPC9zYW1sOlN1YmplY3Q+CgkJPHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMjUtMDUtMjFUMDk6Mzc6NTguNDI0WiIgTm90T25PckFmdGVyPSIyMDI1LTA1LTIxVDA5OjQyOjU4LjQyNFoiPgoJCQk8c2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgoJCQkJPHNhbWw6QXVkaWVuY2U+dGhlLXNwLWVudGl0eS1pZDwvc2FtbDpBdWRpZW5jZT4KCQkJPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+CgkJPC9zYW1sOkNvbmRpdGlvbnM+e0F1dGhuU3RhdGVtZW50fTxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudC8+Cgk8L3NhbWw6QXNzZXJ0aW9uPgo8L3NhbWxwOlJlc3BvbnNlPg==`

describe("assertion", () => {
    test("parseAssertion should parse assertion", () => {
        const parsedAssertion = assertion.parseAssertion(exampleAssertion)
        expect(true).toBe(true);
        expect(parsedAssertion.id).toEqual( "_8e8dc5f69a98cc4c1ff3427e5ce34606fd672f91e6")
        expect(parsedAssertion.inResponseTo).toEqual( "_4606cc1f427fa981e6ffd653ee8d6972fc5ce398c4")
        expect(parsedAssertion.issuer).toEqual( "the-idp-entity-id")
        expect(parsedAssertion.audience).toEqual("the-sp-entity-id")
        expect(parsedAssertion.issueInstant).toEqual(new Date("2025-05-21T09:37:58.424Z"))
        expect(parsedAssertion.nameID).toEqual( "leo@hadlow.com")
        expect(parsedAssertion.notBefore).toEqual(new Date("2025-05-21T09:37:58.424Z"))
        expect(parsedAssertion.notOnOrAfter).toEqual(new Date("2025-05-21T09:42:58.424Z"))
    });
});
